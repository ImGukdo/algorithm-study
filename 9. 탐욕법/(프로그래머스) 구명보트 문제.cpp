// https://programmers.co.kr/learn/courses/30/lessons/42885
// 프로그래머스 구명보트 문제
// 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 
// 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.
// 예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 
// 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만
// 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.
// 구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.
// 사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 
// 모든 사람을 구출하기 위해 필요한 구명보트 개수의 최솟값을 return 하도록 solution 함수를 작성해주세요. 

#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(vector<int> people, int limit) {
    int answer = 0;
    sort(people.begin(), people.end());  // 사람들을 몸무게를 기준으로 오름차순으로 정렬 
    int i = 0;  // 앞에서 부터 시작하는 인덱스 
    int j = people.size() - 1;  // 뒤에서 부터 시작하는 인덱스
    while(i <= j){  // 모든 사람을 탐색할때까지 
        if(people[i] + people[j] <= limit){  // 앞사람과 뒷사람이 무게가 제한을 초과하지 않으면 
            ++answer;
            ++i;  // 앞에서 다음사람으로 
            --j;  // 뒤에서 다음사람으로 
        }
        else{  // 앞사람과 뒷사람이 무게가 제한을 초과하면 
            ++answer;
            --j;  // 뒤에서 다음사람으로 
        }
    }
    return answer;
}
